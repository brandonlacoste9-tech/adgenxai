name: Cortex Observer
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch: {}
permissions:
  contents: read
  issues: write
jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch endpoints
        run: |
          set -euo pipefail
          curl -sSfL https://adgenxai.pro/.netlify/functions/webhook-telemetry > t.json
          curl -sSfL https://adgenxai.pro/.netlify/functions/health > h.json
          echo "Telemetry size: $(wc -c < t.json) bytes"
          echo "Health size: $(wc -c < h.json) bytes"
          
      - name: Validate JSON
        run: |
          jq empty < t.json && echo "✅ Telemetry is valid JSON"
          jq empty < h.json && echo "✅ Health is valid JSON"

      - name: Post to issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const t = JSON.parse(fs.readFileSync('t.json', 'utf8'));
              const h = JSON.parse(fs.readFileSync('h.json', 'utf8'));
              const body = `## 🧠 Cortex Status
**Time:** ${new Date().toISOString()}

### Health
\`\`\`json
${JSON.stringify(h, null, 2)}
\`\`\`

### Telemetry
\`\`\`json
${JSON.stringify(t, null, 2)}
\`\`\``;
              const r = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'cortex-status',
                state: 'open',
                per_page: 1
              });
              if (r.data.length) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: r.data[0].number,
                  body
                });
                console.log('✅ Posted to issue #' + r.data[0].number);
              } else {
                console.log('⚠️ No cortex-status issue found');
              }
            } catch (e) {
              console.error('❌ Error in github-script step:', e);
              throw e;
            }
