name: Observer v2
on:
  push:
    branches: [main]
  workflow_dispatch: {}
  schedule:
    - cron: '0 * * * *'
permissions:
  contents: read
  issues: write
jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch endpoints
        run: |
          set -euo pipefail
          curl -sSfL https://adgenxai.pro/.netlify/functions/webhook-telemetry > t.json
          curl -sSfL https://adgenxai.pro/.netlify/functions/health > h.json
          echo "Telemetry size: $(wc -c < t.json) bytes"
          echo "Health size: $(wc -c < h.json) bytes"
      - name: Validate JSON
        run: |
          jq empty < t.json && echo "✅ Telemetry is valid JSON"
          jq empty < h.json && echo "✅ Health is valid JSON"
      - name: Post to issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const t = JSON.parse(fs.readFileSync('t.json', 'utf8'));
              const h = JSON.parse(fs.readFileSync('h.json', 'utf8'));
              const body = `## 🧠 Cortex Status (v2)\n**Time:** ${new Date().toISOString()}\n\n### Health\n\`\`\`json\n${JSON.stringify(h, null, 2)}\n\`\`\`\n\n### Telemetry\n\`\`\`json\n${JSON.stringify(t, null, 2)}\n\`\`\`\n\n*Automated observation*`;
              const { data: issues } = await github.rest.issues.listForRepo({owner: context.repo.owner,repo: context.repo.repo,labels: 'cortex-status',state: 'open',per_page: 1});
              if (issues.length) {
                await github.rest.issues.createComment({owner: context.repo.owner,repo: context.repo.repo,issue_number: issues[0].number,body});
                console.log('✅ Posted to issue #' + issues[0].number);
              }
            } catch (e) {
              console.error('❌ Error:', e.message);
              throw e;
            }
